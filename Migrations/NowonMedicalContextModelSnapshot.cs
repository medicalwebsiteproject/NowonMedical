// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NowonMedical.Context;

#nullable disable

namespace NowonMedical.Migrations
{
    [DbContext(typeof(NowonMedicalContext))]
    partial class NowonMedicalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NowonMedical.Models.AdminIP", b =>
                {
                    b.Property<string>("ip_v4")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ip_v4");

                    b.ToTable("AdminIPTbl", (string)null);
                });

            modelBuilder.Entity("NowonMedical.Models.BoardMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<string>("MediaPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.ToTable("BoardMediaTbl", null, t =>
                        {
                            t.HasCheckConstraint("CK_MediaType", "[MediaType] in ('Image', 'Video', 'File')");
                        });
                });

            modelBuilder.Entity("NowonMedical.Models.CommunityBoard", b =>
                {
                    b.Property<int>("BoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoardId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BoardId");

                    b.ToTable("CommunityBoardTbl", null, t =>
                        {
                            t.HasCheckConstraint("CK_BoardType", "[Type] in ('Notice', 'News', 'Review')");
                        });
                });

            modelBuilder.Entity("NowonMedical.Models.BoardMedia", b =>
                {
                    b.HasOne("NowonMedical.Models.CommunityBoard", "CommunityBoard")
                        .WithMany("Media")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommunityBoard");
                });

            modelBuilder.Entity("NowonMedical.Models.CommunityBoard", b =>
                {
                    b.Navigation("Media");
                });
#pragma warning restore 612, 618
        }
    }
}
